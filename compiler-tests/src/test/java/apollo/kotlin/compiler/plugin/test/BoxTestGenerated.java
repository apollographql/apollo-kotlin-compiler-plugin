

package apollo.kotlin.compiler.plugin.test;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TargetBackend;
import org.jetbrains.kotlin.test.TestMetadata;
import kctf.ClasspathBasedStandardLibrariesPathProvider;
import org.jetbrains.kotlin.test.services.KotlinStandardLibrariesPathProvider;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link kctf.MainKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("compiler-tests/src/test/data/box")
@TestDataPath("$PROJECT_ROOT")
public class BoxTestGenerated extends AbstractBoxTest {
  @Test
  @TestMetadata("adapter-read.kt")
  public void testAdapter_read() {
    runTest("compiler-tests/src/test/data/box/adapter-read.kt");
  }

  @Test
  @TestMetadata("adapter-write.kt")
  public void testAdapter_write() {
    runTest("compiler-tests/src/test/data/box/adapter-write.kt");
  }

  @Test
  public void testAllFilesPresentInBox() {
    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler-tests/src/test/data/box"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
  }

  @Test
  @TestMetadata("builtin-scalars.kt")
  public void testBuiltin_scalars() {
    runTest("compiler-tests/src/test/data/box/builtin-scalars.kt");
  }

  @Test
  @TestMetadata("compat.kt")
  public void testCompat() {
    runTest("compiler-tests/src/test/data/box/compat.kt");
  }

  @Test
  @TestMetadata("custom-scalar.kt")
  public void testCustom_scalar() {
    runTest("compiler-tests/src/test/data/box/custom-scalar.kt");
  }

  @Test
  @TestMetadata("fragment-spread-document.kt")
  public void testFragment_spread_document() {
    runTest("compiler-tests/src/test/data/box/fragment-spread-document.kt");
  }

  @Test
  @TestMetadata("fragment-spread-read.kt")
  public void testFragment_spread_read() {
    runTest("compiler-tests/src/test/data/box/fragment-spread-read.kt");
  }

  @Test
  @TestMetadata("fragment-spread-write.kt")
  public void testFragment_spread_write() {
    runTest("compiler-tests/src/test/data/box/fragment-spread-write.kt");
  }

  @Test
  @TestMetadata("inline-fragment-read.kt")
  public void testInline_fragment_read() {
    runTest("compiler-tests/src/test/data/box/inline-fragment-read.kt");
  }

  @Test
  @TestMetadata("inline-fragment-write.kt")
  public void testInline_fragment_write() {
    runTest("compiler-tests/src/test/data/box/inline-fragment-write.kt");
  }

  @Test
  @TestMetadata("list-and-non-null.kt")
  public void testList_and_non_null() {
    runTest("compiler-tests/src/test/data/box/list-and-non-null.kt");
  }

  @Test
  @TestMetadata("nested-field.kt")
  public void testNested_field() {
    runTest("compiler-tests/src/test/data/box/nested-field.kt");
  }

  @Test
  @TestMetadata("playground.kt")
  public void testPlayground() {
    runTest("compiler-tests/src/test/data/box/playground.kt");
  }

  @Test
  @TestMetadata("simple.kt")
  public void testSimple() {
    runTest("compiler-tests/src/test/data/box/simple.kt");
  }
  @Override
  public KotlinStandardLibrariesPathProvider createKotlinStandardLibrariesPathProvider()  {
    return ClasspathBasedStandardLibrariesPathProvider.INSTANCE;
  }
}
