FILE: simple.kt
    @R|apollo/kotlin/Query|(document = String({int})) public final class GetFooQuery : R|kotlin/Any|, R|apollo/kotlin/Executable<GetFooQuery.Data>| {
        public constructor(): R|GetFooQuery| {
            super<R|kotlin/Any|>()
        }

        public final fun compiledDocument(): R|apollo/kotlin/CompiledDocument|

        public final fun variables(): R|kotlin/collections/Map<kotlin/String, kotlin/Any?>|

        public final fun dataAdapter(): R|apollo/kotlin/Adapter<GetFooQuery.Data>|

        public final class Data : R|kotlin/Any| {
            public final val int: R|kotlin/Int?|
                public get(): R|kotlin/Int?|

            public constructor(int: R|kotlin/Int?|): R|GetFooQuery.Data|

            public final object Adapter : R|apollo/kotlin/Adapter<GetFooQuery.Data>| {
                public final fun fromJson(element: R|apollo/kotlin/JsonElement|): R|GetFooQuery.Data|

                public final fun toJson(value: R|GetFooQuery.Data|): R|apollo/kotlin/JsonElement|

                public constructor(): R|GetFooQuery.Data.Adapter|

            }

        }

        public final companion object Companion : R|kotlin/Any| {
            public final val compiledDocument: R|apollo/kotlin/CompiledDocument|
                public get(): R|apollo/kotlin/CompiledDocument|

            public constructor(): R|GetFooQuery.Companion|

        }

    }
    public final fun box(): R|kotlin/String| {
        R|kotlin/check|(==(Q|GetFooQuery|.R|/GetFooQuery.Data|(Int(4)).R|/GetFooQuery.Data.int|, Int(4)))
        ^box String(OK)
    }
